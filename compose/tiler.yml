services:
  db:
    image: ohm-tiler-db:v1
    build:
      context: ../images/tiler-db
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    # volumes:
    #   - ../data/tiler-db-data2:/var/lib/postgresql/data
    env_file:
      - ../envs/.env.tiler
    restart: always
    networks:
      - tiler_network

  imposm:
    image: rub21/tiler-imposm:v80
    build:
      context: ../images/tiler-imposm
      dockerfile: Dockerfile
    volumes:
      - ../images/tiler-imposm:/osm
      - ../hetzner:/hetzner
    command:
      - sh
      - -c
      - "./start.sh"
    env_file:
      - ../envs/.env.tiler
    networks:
      - tiler_network

  tiler:
    image: rub21/tiler-server:v80
    build:
      context: ../images/tiler-server
      dockerfile: Dockerfile
    volumes:
      - ../hetzner:/hetzner
      - ../images/tiler-server:/app
    ports:
      - "9090:9090"
    env_file:
      - ../envs/.env.tiler
    restart: always
    networks:
      - tiler_network

  tiler-cache:
    image: rub21/tiler-cache:v2
    build:
      context: ../images/tiler-cache
      dockerfile: Dockerfile
    volumes:
      - ../images/tiler-cache:/app
    env_file:
      - ../envs/.env.tiler
    restart: always
    networks:
      - tiler_network


  tiler-monitor:
    image: rub21/tiler-monitor:v1
    build:
      context: ../images/tiler-monitor
      dockerfile: Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ../images/tiler-monitor:/app
      - ../hetzner:/app/hetzner
    environment:
      - DOCKER_CONFIG_ENVIRONMENT=staging
    env_file:
      - ../envs/.env.tiler
    stdin_open: true
    tty: true

networks:
  tiler_network:
    driver: bridge