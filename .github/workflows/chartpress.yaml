name: Chartpress Publish
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: '3.6'
    - name: Setup git
      run: git config --global user.email "noreply@developmentseed.org" && git config --global user.name "Github Action"
    - name: Install Chartpress
      run: |
        pip install -v chartpress
    - name: Run Chartpress
      run: chartpress --push
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
    - name: Substitute secrets
      uses: bluwy/substitute-string-action@v1
      with:
        _input-file: 'values.staging.template.yaml'
        _format-key: '{{key}}'
        _output-file: 'values.staging.yaml'
        AWS_SSL_ARN: ${{ secrets.AWS_SSL_ARN }}
        MAILER_ADDRESS: ${{ secrets.MAILER_ADDRESS }}
        MAILER_DOMAIN: ${{ secrets.MAILER_DOMAIN }}
        MAILER_PASSWORD: ${{ secrets.MAILER_PASSWORD }}
        MAILER_USERNAME: ${{ secrets.MAILER_USERNAME }}
        STAGING_DB: ${{ secrets.STAGING_DB }}
        STAGING_DB_EBS: ${{ secrets.STAGING_DB_EBS }}
        STAGING_DB_PASSWORD: ${{ secrets.STAGING_DB_PASSWORD }}
        STAGING_DB_USER: ${{ secrets.STAGING_DB_USER }}
        STAGING_DOMAIN_NAME: ${{ secrets.STAGING_DOMAIN_NAME }}
        STAGING_ID_KEY: ${{ secrets.STAGING_ID_KEY }}
        STAGING_S3_BUCKET: ${{ secrets.STAGING_S3_BUCKET }}
        STAGING_TILER_DB: ${{ secrets.STAGING_TILER_DB }}
        STAGING_TILER_DB_EBS: ${{ secrets.STAGING_TILER_DB_EBS }}
        STAGING_TILER_DB_HOST: ${{ secrets.STAGING_TILER_DB_HOST }}
        STAGING_TILER_DB_PASSWORD: ${{ secrets.STAGING_TILER_DB_PASSWORD }}
        STAGING_TILER_DB_USER: ${{ secrets.STAGING_TILER_DB_USER }}
        STAGING_TILER_IMPOSM_EBS: ${{ secrets.STAGING_TILER_IMPOSM_EBS }}
        STAGING_TILER_IMPOSM_REPLICATION_URL: ${{ secrets.STAGING_TILER_IMPOSM_REPLICATION_URL }}
        STAGING_TILER_SERVER_EBS: ${{ secrets.STAGING_TILER_SERVER_EBS }}
        STAGING_TM_API_CONSUMER_KEY: ${{ secrets.STAGING_TM_API_CONSUMER_KEY }}
        STAGING_TM_API_CONSUMER_SECRET: ${{ secrets.STAGING_TM_API_CONSUMER_SECRET }}
        STAGING_TM_API_DB: ${{ secrets.STAGING_TM_API_DB }}
        STAGING_TM_API_DB_HOST: ${{ secrets.STAGING_TM_API_DB_HOST }}
        STAGING_TM_API_DB_PASSWORD: ${{ secrets.STAGING_TM_API_DB_PASSWORD }}
        STAGING_TM_API_DB_USER: ${{ secrets.STAGING_TM_API_DB_USER }}
        STAGING_TM_API_SECRET: ${{ secrets.STAGING_TM_API_SECRET }}

    - name: AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: helm deploy
      uses: koslibpro/helm-eks-action@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      with:
        command: helm upgrade staging --wait ohm/ -f values.staging.yaml -f ohm/values.yaml